console.log("app-logic.js says: this seem to be working"),(()=>{console.log("interface.js says: this seem to be working");const e=(()=>{const e=document.getElementById("content"),t=(e,t)=>{const n=document.createElement("div");return n.className=e,t&&(n.textContent=t),n},n=(e,t,n)=>{const o=e;o.style.left=`${t}px`,o.style.top=`${n}px`},o=n=>{const o=t("feedback",n);o.style.background="rgba(255, 0, 0, 0.7)",e.appendChild(o)};return{setPosition:n,createDiv:t,createPopup:(c,s)=>{const r=t("choice");n(r,c+60,s-70),["Bowser","Neo","Waldo"].forEach((e=>{const t=(e=>{const t=document.createElement("a");return t.textContent=e,t.href="#",t})(e);t.addEventListener("click",(()=>{r.remove(),o("Keep looking!")})),r.appendChild(t)})),e.appendChild(r)},createFeedbackMsg:o,showOverlay:()=>{document.getElementById("overlay").style.display="flex"},hideOverlay:()=>{document.getElementById("overlay").style.display="none"}}})();(()=>{const t=document.getElementById("content"),n=document.getElementById("dropdownButton"),o=document.getElementById("dropdownMenu"),c=document.getElementById("backgroundImg"),s=document.getElementById("startButton");let r=!1,l=!0;const d=[],a=()=>{r||(e.hideOverlay(),(()=>{const e=document.getElementById("timer");let t=0;setInterval((()=>{t++;const n=(e=>{const t=Math.floor(e/3600),n=Math.floor(e%3600/60);return`${String(t).padStart(2,"0")}:${String(n).padStart(2,"0")}:${String(e%60).padStart(2,"0")}`})(t);e.textContent=n}),1e3)})(),r=!0)},i=n=>{if(!n.target.closest("header")&&!n.target.closest("footer")){if(l){const{x:o,y:s}=(e=>{const t=c.getBoundingClientRect();return{x:e.clientX-t.left,y:e.clientY-t.top}})(n);((n,o)=>{const c=e.createDiv("circle");e.setPosition(c,n-50,o-50),t.appendChild(c),d.push(c)})(o,s),e.createPopup(o,s)}else{(()=>{if(d.length>0){const e=d.pop();t.removeChild(e)}})();const e=document.querySelector(".popup");e&&e.remove()}l=!l}};return{init:()=>{t.addEventListener("click",i),n.addEventListener("click",(()=>{o.classList.toggle("show"),n.textContent=o.classList.contains("show")?"▲ Hide Characters ▲":"▼ Show Characters ▼"})),s.addEventListener("click",a),e.showOverlay()}}})().init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFNb0QsRUFBU2pFLEVBQVNJLFVBQVUsVUFDbENKLEVBQVNVLFlBQVl1RCxFQUFRckQsRUFBSSxHQUFJQyxFQUFJLElBQ3pDWixFQUFRcUIsWUFBWTJDLEdBQ3BCdkIsRUFBUXdCLEtBQUtELEVBQU8sRUFzRGxCRSxDQUFhdkQsRUFBR0MsR0FDaEJiLEVBQVN1QixZQUFZWCxFQUFHQyxFQUMxQixLQUFPLENBckRZLE1BQ25CLEdBQUk2QixFQUFRMEIsT0FBUyxFQUFHLENBQ3RCLE1BQU1DLEVBQWlCM0IsRUFBUTRCLE1BQy9CckUsRUFBUXNFLFlBQVlGLEVBQ3RCLEdBa0RFRyxHQUNBLE1BQU1oRCxFQUFRdEIsU0FBU3VFLGNBQWMsVUFDakNqRCxHQUNGQSxFQUFNUSxRQUVWLENBRUFTLEdBQWtCQSxDQWRsQixDQWNnQyxFQWtCbEMsTUFBTyxDQUNMaUMsS0FoQlcsS0FDWHpFLEVBQVE4QixpQkFBaUIsUUFBU3lCLEdBRWxDcEIsRUFBZUwsaUJBQWlCLFNBQVMsS0FDdkNNLEVBQWFzQyxVQUFVQyxPQUFPLFFBQzlCeEMsRUFBZTNCLFlBQWM0QixFQUFhc0MsVUFBVUUsU0FBUyxRQUN6RCxzQkFDQSxxQkFBcUIsSUFHM0J0QyxFQUFZUixpQkFBaUIsUUFBU1ksR0FFdEMzQyxFQUFTaUMsYUFBYSxFQU16QixFQXBHa0IsR0FzR1J5QyxNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hlcmVfaXNfd2FsZG8vLi9zcmMvYXBwLWxvZ2ljLmpzIiwid2VicGFjazovL3doZXJlX2lzX3dhbGRvLy4vc3JjL2ludGVyZmFjZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zb2xlLmxvZyhcImFwcC1sb2dpYy5qcyBzYXlzOiB0aGlzIHNlZW0gdG8gYmUgd29ya2luZ1wiKTtcbiIsIi8vIFRPIERPOlxuLy8gRmluaXNoIDcuXG4vLyBDcmVhdGUgVXRpbHMgbW9kdWxlIGFuZCBtb3ZlIHRoaW5ncyB0aGVyZVxuLy8gQWRkaXRpb25hbCBjbGVhbnVwIGlmIG5lY2Vzc2FyeVxuLy8gQ29udGludWUgd2l0aCAxMC5cblxuY29uc29sZS5sb2coXCJpbnRlcmZhY2UuanMgc2F5czogdGhpcyBzZWVtIHRvIGJlIHdvcmtpbmdcIik7XG5cbmNvbnN0IFJlbmRlcmVyID0gKCgpID0+IHtcbiAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29udGVudFwiKTtcblxuICBjb25zdCBjcmVhdGVEaXYgPSAoY2xhc3NOYW1lLCB0ZXh0KSA9PiB7XG4gICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBkaXYuY2xhc3NOYW1lID0gY2xhc3NOYW1lO1xuICAgIGlmICh0ZXh0KSB7XG4gICAgICBkaXYudGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgIH1cbiAgICByZXR1cm4gZGl2O1xuICB9O1xuXG4gIGNvbnN0IHNldFBvc2l0aW9uID0gKGVsZW1lbnQsIHgsIHkpID0+IHtcbiAgICBjb25zdCBwb3NpdGlvbmVkID0gZWxlbWVudDtcbiAgICBwb3NpdGlvbmVkLnN0eWxlLmxlZnQgPSBgJHt4fXB4YDtcbiAgICBwb3NpdGlvbmVkLnN0eWxlLnRvcCA9IGAke3l9cHhgO1xuICB9O1xuXG4gIGNvbnN0IGNyZWF0ZUZlZWRiYWNrTXNnID0gKG1lc3NhZ2UpID0+IHtcbiAgICBjb25zdCBmZWVkYmFja01zZyA9IGNyZWF0ZURpdihcImZlZWRiYWNrXCIsIG1lc3NhZ2UpO1xuICAgIGZlZWRiYWNrTXNnLnN0eWxlLmJhY2tncm91bmQgPSBcInJnYmEoMjU1LCAwLCAwLCAwLjcpXCI7XG4gICAgY29udGVudC5hcHBlbmRDaGlsZChmZWVkYmFja01zZyk7XG4gIH07XG5cbiAgY29uc3QgY3JlYXRlTGluayA9ICh0ZXh0KSA9PiB7XG4gICAgY29uc3QgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xuICAgIGxpbmsudGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgIGxpbmsuaHJlZiA9IFwiI1wiO1xuICAgIHJldHVybiBsaW5rO1xuICB9O1xuXG4gIGNvbnN0IGNyZWF0ZVBvcHVwID0gKHgsIHkpID0+IHtcbiAgICBjb25zdCBwb3B1cCA9IGNyZWF0ZURpdihcImNob2ljZVwiKTtcbiAgICBzZXRQb3NpdGlvbihwb3B1cCwgeCArIDYwLCB5IC0gNzApO1xuXG4gICAgY29uc3Qgb3B0aW9ucyA9IFtcIkJvd3NlclwiLCBcIk5lb1wiLCBcIldhbGRvXCJdO1xuICAgIG9wdGlvbnMuZm9yRWFjaCgob3B0aW9uKSA9PiB7XG4gICAgICBjb25zdCBjaG9pY2UgPSBjcmVhdGVMaW5rKG9wdGlvbik7XG4gICAgICBjaG9pY2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgcG9wdXAucmVtb3ZlKCk7XG4gICAgICAgIGNyZWF0ZUZlZWRiYWNrTXNnKFwiS2VlcCBsb29raW5nIVwiKTtcbiAgICAgIH0pO1xuICAgICAgcG9wdXAuYXBwZW5kQ2hpbGQoY2hvaWNlKTtcbiAgICB9KTtcblxuICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQocG9wdXApO1xuICB9O1xuXG4gIGNvbnN0IHNob3dPdmVybGF5ID0gKCkgPT4ge1xuICAgIGNvbnN0IG92ZXJsYXkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm92ZXJsYXlcIik7XG4gICAgb3ZlcmxheS5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gIH07XG5cbiAgY29uc3QgaGlkZU92ZXJsYXkgPSAoKSA9PiB7XG4gICAgY29uc3Qgb3ZlcmxheSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwib3ZlcmxheVwiKTtcbiAgICBvdmVybGF5LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIHNldFBvc2l0aW9uLFxuICAgIGNyZWF0ZURpdixcbiAgICBjcmVhdGVQb3B1cCxcbiAgICBjcmVhdGVGZWVkYmFja01zZyxcbiAgICBzaG93T3ZlcmxheSxcbiAgICBoaWRlT3ZlcmxheSxcbiAgfTtcbn0pKCk7XG5cbmNvbnN0IENvbnRyb2xsZXIgPSAoKCkgPT4ge1xuICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250ZW50XCIpO1xuICBjb25zdCBkcm9wZG93bkJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZHJvcGRvd25CdXR0b25cIik7XG4gIGNvbnN0IGRyb3Bkb3duTWVudSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZHJvcGRvd25NZW51XCIpO1xuICBjb25zdCBiYWNrZ3JvdW5kSW1nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYWNrZ3JvdW5kSW1nXCIpO1xuICBjb25zdCBzdGFydEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3RhcnRCdXR0b25cIik7XG5cbiAgbGV0IGlzR2FtZVN0YXJ0ZWQgPSBmYWxzZTtcbiAgbGV0IGlzQWRkaW5nQ2lyY2xlID0gdHJ1ZTtcbiAgY29uc3QgY2lyY2xlcyA9IFtdO1xuXG4gIGNvbnN0IGNyZWF0ZUNpcmNsZSA9ICh4LCB5KSA9PiB7XG4gICAgY29uc3QgY2lyY2xlID0gUmVuZGVyZXIuY3JlYXRlRGl2KFwiY2lyY2xlXCIpO1xuICAgIFJlbmRlcmVyLnNldFBvc2l0aW9uKGNpcmNsZSwgeCAtIDUwLCB5IC0gNTApO1xuICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQoY2lyY2xlKTtcbiAgICBjaXJjbGVzLnB1c2goY2lyY2xlKTtcbiAgfTtcblxuICBjb25zdCByZW1vdmVDaXJjbGUgPSAoKSA9PiB7XG4gICAgaWYgKGNpcmNsZXMubGVuZ3RoID4gMCkge1xuICAgICAgY29uc3QgY2lyY2xlVG9SZW1vdmUgPSBjaXJjbGVzLnBvcCgpO1xuICAgICAgY29udGVudC5yZW1vdmVDaGlsZChjaXJjbGVUb1JlbW92ZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGdldENvb3JkaW5hdGVzID0gKGV2ZW50KSA9PiB7XG4gICAgY29uc3QgcmVjdCA9IGJhY2tncm91bmRJbWcuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgY29uc3QgeCA9IGV2ZW50LmNsaWVudFggLSByZWN0LmxlZnQ7XG4gICAgY29uc3QgeSA9IGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcDtcbiAgICByZXR1cm4geyB4LCB5IH07XG4gIH07XG5cbiAgY29uc3QgZm9ybWF0VGltZSA9IChzZWNvbmRzKSA9PiB7XG4gICAgY29uc3QgaG91cnMgPSBNYXRoLmZsb29yKHNlY29uZHMgLyAzNjAwKTtcbiAgICBjb25zdCBtaW51dGVzID0gTWF0aC5mbG9vcigoc2Vjb25kcyAlIDM2MDApIC8gNjApO1xuICAgIGNvbnN0IGZvcm1hdHRlZEhvdXJzID0gU3RyaW5nKGhvdXJzKS5wYWRTdGFydCgyLCBcIjBcIik7XG4gICAgY29uc3QgZm9ybWF0dGVkTWludXRlcyA9IFN0cmluZyhtaW51dGVzKS5wYWRTdGFydCgyLCBcIjBcIik7XG4gICAgY29uc3QgZm9ybWF0dGVkU2Vjb25kcyA9IFN0cmluZyhzZWNvbmRzICUgNjApLnBhZFN0YXJ0KDIsIFwiMFwiKTtcbiAgICByZXR1cm4gYCR7Zm9ybWF0dGVkSG91cnN9OiR7Zm9ybWF0dGVkTWludXRlc306JHtmb3JtYXR0ZWRTZWNvbmRzfWA7XG4gIH07XG5cbiAgY29uc3Qgc3RhcnRUaW1lciA9ICgpID0+IHtcbiAgICBjb25zdCB0aW1lckVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRpbWVyXCIpO1xuICAgIGxldCBzZWNvbmRzID0gMDtcblxuICAgIGNvbnN0IHVwZGF0ZVRpbWVyID0gKCkgPT4ge1xuICAgICAgc2Vjb25kcysrO1xuICAgICAgY29uc3QgZm9ybWF0dGVkVGltZSA9IGZvcm1hdFRpbWUoc2Vjb25kcyk7XG4gICAgICB0aW1lckVsZW1lbnQudGV4dENvbnRlbnQgPSBmb3JtYXR0ZWRUaW1lO1xuICAgIH07XG5cbiAgICBzZXRJbnRlcnZhbCh1cGRhdGVUaW1lciwgMTAwMCk7XG4gIH07XG5cbiAgY29uc3Qgc3RhcnRHYW1lID0gKCkgPT4ge1xuICAgIGlmICghaXNHYW1lU3RhcnRlZCkge1xuICAgICAgUmVuZGVyZXIuaGlkZU92ZXJsYXkoKTtcbiAgICAgIHN0YXJ0VGltZXIoKTtcbiAgICAgIGlzR2FtZVN0YXJ0ZWQgPSB0cnVlO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVDb250ZW50Q2xpY2sgPSAoZXZlbnQpID0+IHtcbiAgICBpZiAoZXZlbnQudGFyZ2V0LmNsb3Nlc3QoXCJoZWFkZXJcIikgfHwgZXZlbnQudGFyZ2V0LmNsb3Nlc3QoXCJmb290ZXJcIikpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoaXNBZGRpbmdDaXJjbGUpIHtcbiAgICAgIGNvbnN0IHsgeCwgeSB9ID0gZ2V0Q29vcmRpbmF0ZXMoZXZlbnQpO1xuICAgICAgY3JlYXRlQ2lyY2xlKHgsIHkpO1xuICAgICAgUmVuZGVyZXIuY3JlYXRlUG9wdXAoeCwgeSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZUNpcmNsZSgpO1xuICAgICAgY29uc3QgcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwXCIpO1xuICAgICAgaWYgKHBvcHVwKSB7XG4gICAgICAgIHBvcHVwLnJlbW92ZSgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlzQWRkaW5nQ2lyY2xlID0gIWlzQWRkaW5nQ2lyY2xlO1xuICB9O1xuXG4gIGNvbnN0IGluaXQgPSAoKSA9PiB7XG4gICAgY29udGVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaGFuZGxlQ29udGVudENsaWNrKTtcblxuICAgIGRyb3Bkb3duQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBkcm9wZG93bk1lbnUuY2xhc3NMaXN0LnRvZ2dsZShcInNob3dcIik7XG4gICAgICBkcm9wZG93bkJ1dHRvbi50ZXh0Q29udGVudCA9IGRyb3Bkb3duTWVudS5jbGFzc0xpc3QuY29udGFpbnMoXCJzaG93XCIpXG4gICAgICAgID8gXCLilrIgSGlkZSBDaGFyYWN0ZXJzIOKWslwiXG4gICAgICAgIDogXCLilrwgU2hvdyBDaGFyYWN0ZXJzIOKWvFwiO1xuICAgIH0pO1xuXG4gICAgc3RhcnRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHN0YXJ0R2FtZSk7XG5cbiAgICBSZW5kZXJlci5zaG93T3ZlcmxheSgpO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgaW5pdCxcbiAgfTtcbn0pKCk7XG5cbkNvbnRyb2xsZXIuaW5pdCgpO1xuIl0sIm5hbWVzIjpbImNvbnNvbGUiLCJsb2ciLCJSZW5kZXJlciIsImNvbnRlbnQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY3JlYXRlRGl2IiwiY2xhc3NOYW1lIiwidGV4dCIsImRpdiIsImNyZWF0ZUVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsInNldFBvc2l0aW9uIiwiZWxlbWVudCIsIngiLCJ5IiwicG9zaXRpb25lZCIsInN0eWxlIiwibGVmdCIsInRvcCIsImNyZWF0ZUZlZWRiYWNrTXNnIiwibWVzc2FnZSIsImZlZWRiYWNrTXNnIiwiYmFja2dyb3VuZCIsImFwcGVuZENoaWxkIiwiY3JlYXRlUG9wdXAiLCJwb3B1cCIsImZvckVhY2giLCJvcHRpb24iLCJjaG9pY2UiLCJsaW5rIiwiaHJlZiIsImNyZWF0ZUxpbmsiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlIiwic2hvd092ZXJsYXkiLCJkaXNwbGF5IiwiaGlkZU92ZXJsYXkiLCJkcm9wZG93bkJ1dHRvbiIsImRyb3Bkb3duTWVudSIsImJhY2tncm91bmRJbWciLCJzdGFydEJ1dHRvbiIsImlzR2FtZVN0YXJ0ZWQiLCJpc0FkZGluZ0NpcmNsZSIsImNpcmNsZXMiLCJzdGFydEdhbWUiLCJ0aW1lckVsZW1lbnQiLCJzZWNvbmRzIiwic2V0SW50ZXJ2YWwiLCJmb3JtYXR0ZWRUaW1lIiwiaG91cnMiLCJNYXRoIiwiZmxvb3IiLCJtaW51dGVzIiwiU3RyaW5nIiwicGFkU3RhcnQiLCJmb3JtYXRUaW1lIiwic3RhcnRUaW1lciIsImhhbmRsZUNvbnRlbnRDbGljayIsImV2ZW50IiwidGFyZ2V0IiwiY2xvc2VzdCIsInJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJjbGllbnRYIiwiY2xpZW50WSIsImdldENvb3JkaW5hdGVzIiwiY2lyY2xlIiwicHVzaCIsImNyZWF0ZUNpcmNsZSIsImxlbmd0aCIsImNpcmNsZVRvUmVtb3ZlIiwicG9wIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVDaXJjbGUiLCJxdWVyeVNlbGVjdG9yIiwiaW5pdCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsImNvbnRhaW5zIl0sInNvdXJjZVJvb3QiOiIifQ==