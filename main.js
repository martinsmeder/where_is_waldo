console.log("app-logic.js says: this seem to be working"),(()=>{console.log("interface.js says: this seem to be working");const e=(()=>{const t=document.getElementById("content"),n=document.getElementById("overlay"),o=[],c=[],r=(e,t)=>{const n=document.createElement("div");return n.className=e,t&&(n.textContent=t),n},s=(e,t,n)=>{const o=e;o.style.left=`${t}px`,o.style.top=`${n}px`},l=e=>{const n=r("feedback",e);n.style.background="rgba(255, 0, 0, 0.7)",t.appendChild(n)},a=e=>{e.parentNode&&e.parentNode.removeChild(e)},d=()=>{if(c.length>0){const e=c.pop();a(e)}};return{circles:o,popups:c,createDiv:r,setPosition:s,createFeedbackMsg:l,createLink:(e,t)=>{const n=document.createElement("a");return n.textContent=e,n.href="#",n.addEventListener("click",t),n},showOverlay:()=>{n.style.display="flex"},hideOverlay:()=>{n.style.display="none"},removeElement:a,removeCircle:()=>{if(o.length>0){const e=o.pop();a(e)}},createCircle:(e,n)=>{const c=r("circle");s(c,e-50,n-50),t.appendChild(c),o.push(c)},removePopup:d,createPopup:(n,o)=>{const a=r("choice");s(a,n+60,o-70),["Bowser","Neo","Waldo"].forEach((t=>{const n=e.createLink(t,(()=>{d(),console.log(`Clicked on: ${t}`),l("Keep looking!")}));a.appendChild(n)})),t.appendChild(a),c.push(a)}}})();(()=>{const t=document.getElementById("content"),n=document.getElementById("dropdownButton"),o=document.getElementById("dropdownMenu"),c=document.getElementById("backgroundImg"),r=document.getElementById("startButton"),s=document.getElementById("timer");let l=!1,a=!1,d=!1;const i=()=>{l||(e.hideOverlay(),(()=>{let e=0;setInterval((()=>{e+=1;const t=(e=>{const t=Math.floor(e/3600),n=Math.floor(e%3600/60);return`${String(t).padStart(2,"0")}:${String(n).padStart(2,"0")}:${String(e%60).padStart(2,"0")}`})(e);s.textContent=t}),1e3)})(),l=!0,a=!0,d=!0)},p=t=>{if(l&&!t.target.closest("header")&&!t.target.closest("footer")&&t.target!==r){if(a){const{x:n,y:o}=(e=>{const t=c.getBoundingClientRect();return{x:e.clientX-t.left,y:e.clientY-t.top}})(t);e.createCircle(n,o),e.createPopup(n,o)}else e.removeCircle(),e.removePopup();a=!a,d=!d}};return{init:()=>{t.addEventListener("click",p),n.addEventListener("click",(()=>{o.classList.toggle("show"),n.textContent=o.classList.contains("show")?"▲ Hide Characters ▲":"▼ Show Characters ▼"})),r.addEventListener("click",i),e.showOverlay()}}})().init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,