console.log("app-logic.js says: this seem to be working"),(()=>{"use strict";const e=(()=>{const e=document.getElementById("backgroundImg");return{getCoordinates:t=>{const n=e.getBoundingClientRect();return{x:t.clientX-n.left,y:t.clientY-n.top}},formatTime:e=>{const t=Math.floor(e/3600),n=Math.floor(e%3600/60);return`${String(t).padStart(2,"0")}:${String(n).padStart(2,"0")}:${String(e%60).padStart(2,"0")}`}}})();console.log("interface.js says: this seem to be working");const t=(()=>{const e=document.getElementById("content"),o=document.getElementById("overlay"),r=[],c=[],s=(e,t)=>{const n=document.createElement("div");return n.className=e,t&&(n.textContent=t),n},l=(e,t,n)=>{const o=e;o.style.left=`${t}px`,o.style.top=`${n}px`},a=e=>{e.parentNode&&e.parentNode.removeChild(e)};return{createDiv:s,setPosition:l,createFeedbackMsg:(t,n,o)=>{const r=s("feedback",t);l(r,n-150,o-100),r.style.background="rgba(255, 0, 0, 0.7)",e.appendChild(r),setTimeout((()=>{r.remove()}),5e3)},createLink:(e,t)=>{const n=document.createElement("a");return n.textContent=e,n.href="#",n.addEventListener("click",t),n},showOverlay:()=>{o.style.display="flex"},hideOverlay:()=>{o.style.display="none"},removeElement:a,removeCircle:()=>{if(r.length>0){const e=r.pop();a(e)}},createCircle:(t,n)=>{const o=s("circle");l(o,t-50,n-50),e.appendChild(o),r.push(o)},removePopup:()=>{if(c.length>0){const e=c.pop();a(e)}},createPopup:(o,r)=>{const a=s("choice");l(a,o+60,r-70),["Bowser","Neo","Waldo"].forEach((e=>{const o=t.createLink(e,n.handleLinkClick);a.appendChild(o)})),e.appendChild(a),c.push(a)}}})(),n=(()=>{const n=document.getElementById("content"),o=document.getElementById("dropdownButton"),r=document.getElementById("dropdownMenu"),c=document.getElementById("startButton"),s=document.getElementById("timer");let l=!1,a=!1,i=!1;const d=()=>{l||(t.hideOverlay(),(()=>{let t=0;setInterval((()=>{t+=1;const n=e.formatTime(t);s.textContent=n}),1e3)})(),l=!0,a=!0,i=!0)},p=n=>{if(l&&!n.target.closest("header")&&!n.target.closest("footer")&&n.target!==c){if(a){const{x:o,y:r}=e.getCoordinates(n);t.createCircle(o,r),t.createPopup(o,r)}else t.removeCircle(),t.removePopup();a=!a,i=!i}},m=n=>{n.preventDefault(),console.log("handelLinkClick() triggered");const{x:o,y:r}=e.getCoordinates(n);t.removePopup(),t.createFeedbackMsg("Keep looking!",o,r)};return{init:()=>{n.addEventListener("click",p),document.querySelectorAll(".choice a").forEach((e=>{e.addEventListener("click",m)})),o.addEventListener("click",(()=>{r.classList.toggle("show"),o.textContent=r.classList.contains("show")?"▲ Hide Characters ▲":"▼ Show Characters ▼"})),c.addEventListener("click",d),t.showOverlay()},handleLinkClick:m}})();n.init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,